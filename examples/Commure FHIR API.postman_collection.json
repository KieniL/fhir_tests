{
	"info": {
		"_postman_id": "3d47dab4-e5ff-4e53-85fd-e53659614b24",
		"name": "Commure FHIR API",
		"description": "Welcome to the Commure API for platform developers. The majority\n    of endpoints documented here are specified by the FHIR standard for health care data exchange,\n    published by HL7®.(http://hl7.org/fhir/).\n\nThis collection is a tool to learn how to use Commure API and is intended for development purpose, it should not be used in any production environment.\n\n\n\n# How to authenticate\nOnce you are signed up, there are two ways to authenticate with Commure’s Server:\n\n## Alternative A:\n\nClick the “View more actions” button of the Collection > Click “Edit” > Go to the variables tab and update only the tenant-id field (both initial value and current value) The tenant-id is the suffix on the baseurl when you sign in to the Commure’s Developer Platform. For example: in https://dashboard-99750511.developer.commure.com/smart/dashboard/ the tenant id is: 99750511. After updating this field please click “Update” at the bottom right corner of the window.  \n\nNow click again the “View more actions” button of the Collection > Click “Edit” > and this time, go to the authorization tab > select Oauth2 as the authorization method > Click “Get New Access Token” > Fill the fields with your tenant information.  \n\n> Remember to remove the blank space between the Curly braces `{ {tenant-id}}`\n\n\n  * Callback url: http://localhost:1234/callback. \n  * Auth url:  `https://api-{ {tenant-id}}.developer.commure.com/auth/authorize`\n  * Access Token url: `https://api-{ {tenant-id}}.developer.commure.com/auth/token`\n  * client-id: smart_hello_world\n  * Scope: openid email\n  * Leave Client Secret and State empty.\n\n  \nAfter filling in the details, please Click in “Request Token” > In the next window Click “Use Token” >Once that window closes please click “Update”\n\n## Alternative B:\n\nIn your browser go to the /auth endpoint, and get the authorization token, then use the token as a bearer in every request you want to make to our servers.\n\n> Note: If you get a 404 SSL error, you forgot to set the tenant-id variable on the collections variables, or you have a wrong base URL.\n\n\nContact Support:\n\nName: Commure\n \nEmail: dev-support@commure.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api/v1",
			"item": [
				{
					"name": "{fhir version}",
					"item": [
						{
							"name": "{type}",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": " history",
											"item": [
												{
													"name": "Get the version history of a resource",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/_history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"_history"
															],
															"variable": [
																{
																	"key": "fhir_version",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
																},
																{
																	"key": "type",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) the name of a resource type (e.g. 'Patient')"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) the Logical Id of a resource"
																}
															]
														}
													},
													"response": [
														{
															"name": "a Bundle with type set to history containing the specified version history, sorted with oldest versions last, and including deleted resources",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/_history",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		":fhir_version",
																		":type",
																		":id",
																		"_history"
																	],
																	"variable": [
																		{
																			"key": "fhir_version"
																		},
																		{
																			"key": "type"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"<json>\""
														}
													]
												},
												{
													"name": "Get a specific version of a resource",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/_history/:vid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"_history",
																":vid"
															],
															"variable": [
																{
																	"key": "fhir_version",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
																},
																{
																	"key": "type",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) the name of a resource type (e.g. 'Patient')"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) the Logical Id of a resource"
																},
																{
																	"key": "vid",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) the Version Id of a resource"
																}
															]
														}
													},
													"response": [
														{
															"name": "a single instance with the content specified for the resource type for that version of the resource",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/_history/:vid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		":fhir_version",
																		":type",
																		":id",
																		"_history",
																		":vid"
																	],
																	"variable": [
																		{
																			"key": "fhir_version"
																		},
																		{
																			"key": "type"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "vid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "ETag",
																	"value": "<string>",
																	"description": ""
																},
																{
																	"key": "Last-Modified",
																	"value": "<string>",
																	"description": ""
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"<json>\""
														},
														{
															"name": "unknown resource",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/_history/:vid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		":fhir_version",
																		":type",
																		":id",
																		"_history",
																		":vid"
																	],
																	"variable": [
																		{
																			"key": "fhir_version"
																		},
																		{
																			"key": "type"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "vid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"<json>\""
														},
														{
															"name": "deleted resource",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/_history/:vid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		":fhir_version",
																		":type",
																		":id",
																		"_history",
																		":vid"
																	],
																	"variable": [
																		{
																			"key": "fhir_version"
																		},
																		{
																			"key": "type"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "vid"
																		}
																	]
																}
															},
															"status": "Gone",
															"code": 410,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"<json>\""
														}
													]
												}
											]
										},
										{
											"name": "Get a resource",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "header containing the Version Id of a resource (e.g. W/'23')",
														"key": "Etag",
														"value": "<string>"
													},
													{
														"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
														"key": "If-Modified-Since",
														"value": "<string>"
													},
													{
														"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														":id"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
														},
														{
															"key": "type",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the name of a resource type (e.g. 'Patient')"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the Logical Id of a resource"
														}
													]
												}
											},
											"response": [
												{
													"name": "unknown resource",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header containing the Version Id of a resource (e.g. W/'23')",
																"key": "Etag",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Modified-Since",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "a single instance with the content specified for the resource type",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header containing the Version Id of a resource (e.g. W/'23')",
																"key": "Etag",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Modified-Since",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "ETag",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Last-Modified",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "deleted resource",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header containing the Version Id of a resource (e.g. W/'23')",
																"key": "Etag",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Modified-Since",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Gone",
													"code": 410,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "resource not modified",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header containing the Version Id of a resource (e.g. W/'23')",
																"key": "Etag",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Modified-Since",
																"value": "<string>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update a resource",
											"request": {
												"method": "PUT",
												"header": [
													{
														"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<object>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														":id"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
														},
														{
															"key": "type",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the name of a resource type (e.g. 'Patient')"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the Logical Id of a resource"
														}
													]
												}
											},
											"response": [
												{
													"name": "resource updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "ETag",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Last-Modified",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "resource not modified",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "authorization is required for the interaction that was attempted",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "no If-Match header found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "resource type not supported, or not a FHIR end-point",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "the resource did not exist prior to the update, and the server does not allow client defined ids",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "the version id given in the If-Match header does not match",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "resource created",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "ETag",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Last-Modified",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "resource could not be parsed or failed basic FHIR validation rules (or multiple matches were found for conditional criteria)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "the proposed resource violated applicable FHIR profiles or server business rules",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "header indicating a conditional read, if used client SHALL accept a 304 Not Modified response",
																"key": "If-Match",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										},
										{
											"name": "Delete a resource",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id?search parameters=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														":id"
													],
													"query": [
														{
															"key": "search parameters",
															"value": "<string>",
															"description": "optional search parameters for conditional delete"
														}
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
														},
														{
															"key": "type",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the name of a resource type (e.g. 'Patient')"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the Logical Id of a resource"
														}
													]
												}
											},
											"response": [
												{
													"name": "resource deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id?search parameters=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"query": [
																{
																	"key": "search parameters",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "ETag",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "issue deleting resource, e.g. referential integrity",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id?search parameters=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"query": [
																{
																	"key": "search parameters",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "deletion not allowed",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id?search parameters=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"query": [
																{
																	"key": "search parameters",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "conditional delete criteria not selective enough",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id?search parameters=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"query": [
																{
																	"key": "search parameters",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "resource deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id?search parameters=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id"
															],
															"query": [
																{
																	"key": "search parameters",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "ETag",
															"value": "<string>",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Apply FHIRPatch for STU3 resources",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"operation\": [\n                {\n                    \"type\": \"<code>\"\n                },\n                {\n                    \"type\": \"<code>\"\n                }\n            ]\n        },\n        {\n            \"operation\": [\n                {\n                    \"type\": \"<code>\"\n                },\n                {\n                    \"type\": \"<code>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$fhir-patch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														":id",
														"$fhir-patch"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														},
														{
															"key": "type",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the name of a resource type (e.g. 'Patient')"
														}
													]
												}
											},
											"response": [
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"operation\": [\n                {\n                    \"type\": \"<code>\"\n                },\n                {\n                    \"type\": \"<code>\"\n                }\n            ]\n        },\n        {\n            \"operation\": [\n                {\n                    \"type\": \"<code>\"\n                },\n                {\n                    \"type\": \"<code>\"\n                }\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$fhir-patch",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"$fhir-patch"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"operation\": [\n                {\n                    \"type\": \"<code>\"\n                },\n                {\n                    \"type\": \"<code>\"\n                }\n            ]\n        },\n        {\n            \"operation\": [\n                {\n                    \"type\": \"<code>\"\n                },\n                {\n                    \"type\": \"<code>\"\n                }\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$fhir-patch",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"$fhir-patch"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										},
										{
											"name": "Apply JSON patch as extended operation",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$commure-json-patch?patch=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														":id",
														"$commure-json-patch"
													],
													"query": [
														{
															"key": "patch",
															"value": "<string>",
															"description": "(Required) JSON Patch to apply, serialized as string"
														}
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														},
														{
															"key": "type",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the name of a resource type (e.g. 'Patient')"
														}
													]
												}
											},
											"response": [
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$commure-json-patch?patch=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"$commure-json-patch"
															],
															"query": [
																{
																	"key": "patch",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$commure-json-patch?patch=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"$commure-json-patch"
															],
															"query": [
																{
																	"key": "patch",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										},
										{
											"name": "Validate a resource",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"resource\": \"<object>\"\n        },\n        {\n            \"resource\": \"<object>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														":id",
														"$validate"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														},
														{
															"key": "type",
															"value": "<string>",
															"type": "string",
															"description": "(Required) the name of a resource type (e.g. 'Patient')"
														}
													]
												},
												"description": "The validate operation checks whether the attached content would be acceptable either generally, as a create, an update or as a delete to an existing resource.  The action the server takes depends on the mode parameter:  \n\n* [mode not provided]: The server checks the content of the resource against any schema, constraint rules, and other general terminology rules \n* create: The server checks the content, and then checks that the content would be acceptable as a create (e.g. that the content would not violate any uniqueness constraints) \n* update: The server checks the content, and then checks that it would accept it as an update against the nominated specific resource (e.g. that there are no changes to immutable fields the server does not allow to change, and checking version integrity if appropriate) \n* delete: The server ignores the content, and checks that the nominated resource is allowed to be deleted (e.g. checking referential integrity rules)  \n\nModes update and delete can only be used when the operation is invoked at the resource instance level.   The return from this operation is an [OperationOutcome](https://www.hl7.org/fhir/operationoutcome.html)\n\nNote that this operation is not the only way to validate resources - see [Validating Resources](https://www.hl7.org/fhir/validation.html) for further information."
											},
											"response": [
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"resource\": \"<object>\"\n        },\n        {\n            \"resource\": \"<object>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$validate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"$validate"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"resource\": \"<object>\"\n        },\n        {\n            \"resource\": \"<object>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/:id/$validate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																":type",
																":id",
																"$validate"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "type"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										}
									]
								},
								{
									"name": "Search resources of a type",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/:type?parameters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												":type"
											],
											"query": [
												{
													"key": "parameters",
													"value": "<string>",
													"description": "search criteria"
												}
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
												},
												{
													"key": "type",
													"value": "<string>",
													"type": "string",
													"description": "(Required) the name of a resource type (e.g. 'Patient')"
												}
											]
										}
									},
									"response": [
										{
											"name": "resource type not supported, or not a FHIR end-point",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type?parameters=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"query": [
														{
															"key": "parameters",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "successful search",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type?parameters=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"query": [
														{
															"key": "parameters",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "authorization is required for the interaction that was attempted",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type?parameters=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"query": [
														{
															"key": "parameters",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "search could not be processed or failed basic FHIR validation rules",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type?parameters=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"query": [
														{
															"key": "parameters",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Create a resource",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "create a new resource only if some equivalent resource does not already exist on the server. The client defines what equivalence means in this case by supplying a FHIR search query in the header",
												"key": "If-None-Exist",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"Bundle\",\n  \"type\": \"collection\",\n  \"entry\": [\n    {\n      \"resource\": {\n        \"resourceType\": \"Procedure\",\n        \"extension\": [\n          {\n            \"url\": \"https://commure.com/fhir/StructureDefinition/scenario-builder-count\",\n            \"valueRange\": {\n              \"low\": {\n                \"value\": 1\n              },\n              \"high\": {\n                \"value\": 3\n              }\n            }\n          },\n          {\n            \"url\": \"https://commure.com/fhir/StructureDefinition/scenario-builder-id\",\n            \"valueString\": \"my-procedure-id\"\n          }\n        ],\n        \"status\": \"on-hold\",\n        \"subject\": {\n          \"display\": \"sdfdf\"\n        },\n        \"performedRange\": {\n          \"low\": {\n            \"value\": 1\n          },\n          \"high\": {\n            \"value\": 3\n          }\n        }\n      }\n    },\n    {\n      \"resource\": {\n        \"resourceType\": \"Patient\",\n        \"extension\": [\n          {\n            \"url\": \"https://commure.com/fhir/StructureDefinition/scenario-builder-count\",\n            \"valueRange\": {\n              \"low\": {\n                \"value\": 1\n              },\n              \"high\": {\n                \"value\": 3\n              }\n            }\n          },\n          {\n            \"url\": \"https://commure.com/fhir/StructureDefinition/scenario-builder-id\",\n            \"valueString\": \"LiverPatient\"\n          }\n        ]\n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												":type"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "r4",
													"type": "string",
													"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
												},
												{
													"key": "type",
													"value": "Bundle",
													"type": "string",
													"description": "(Required) the name of a resource type (e.g. 'Patient')"
												}
											]
										}
									},
									"response": [
										{
											"name": "conditional create criteria were not selective enough",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "create a new resource only if some equivalent resource does not already exist on the server. The client defines what equivalence means in this case by supplying a FHIR search query in the header",
														"key": "If-None-Exist",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<object>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "resource type not supported, or not a FHIR end-point",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "create a new resource only if some equivalent resource does not already exist on the server. The client defines what equivalence means in this case by supplying a FHIR search query in the header",
														"key": "If-None-Exist",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<object>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "conditional create resource already exists",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "create a new resource only if some equivalent resource does not already exist on the server. The client defines what equivalence means in this case by supplying a FHIR search query in the header",
														"key": "If-None-Exist",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<object>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "resource created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "create a new resource only if some equivalent resource does not already exist on the server. The client defines what equivalence means in this case by supplying a FHIR search query in the header",
														"key": "If-None-Exist",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<object>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "<string>",
													"description": ""
												},
												{
													"key": "ETag",
													"value": "<string>",
													"description": ""
												},
												{
													"key": "Last-Modified",
													"value": "<string>",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "the proposed resource violated applicable FHIR profiles or server business rules",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "create a new resource only if some equivalent resource does not already exist on the server. The client defines what equivalence means in this case by supplying a FHIR search query in the header",
														"key": "If-None-Exist",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<object>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "resource could not be parsed or failed basic FHIR validation rules",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "create a new resource only if some equivalent resource does not already exist on the server. The client defines what equivalence means in this case by supplying a FHIR search query in the header",
														"key": "If-None-Exist",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<object>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Get the version history of all resources of a type",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/_history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												":type",
												"_history"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
												},
												{
													"key": "type",
													"value": "<string>",
													"type": "string",
													"description": "(Required) the name of a resource type (e.g. 'Patient')"
												}
											]
										}
									},
									"response": [
										{
											"name": "a Bundle with type set to history containing the specified version history, sorted with oldest versions last, and including deleted resources",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/_history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														"_history"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Validate a resource",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"resource\": \"<object>\"\n        },\n        {\n            \"resource\": \"<object>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/$validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												":type",
												"$validate"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												},
												{
													"key": "type",
													"value": "<string>",
													"type": "string",
													"description": "(Required) the name of a resource type (e.g. 'Patient')"
												}
											]
										},
										"description": "The validate operation checks whether the attached content would be acceptable either generally, as a create, an update or as a delete to an existing resource.  The action the server takes depends on the mode parameter:  \n\n* [mode not provided]: The server checks the content of the resource against any schema, constraint rules, and other general terminology rules \n* create: The server checks the content, and then checks that the content would be acceptable as a create (e.g. that the content would not violate any uniqueness constraints) \n* update: The server checks the content, and then checks that it would accept it as an update against the nominated specific resource (e.g. that there are no changes to immutable fields the server does not allow to change, and checking version integrity if appropriate) \n* delete: The server ignores the content, and checks that the nominated resource is allowed to be deleted (e.g. checking referential integrity rules)  \n\nModes update and delete can only be used when the operation is invoked at the resource instance level.   The return from this operation is an [OperationOutcome](https://www.hl7.org/fhir/operationoutcome.html)\n\nNote that this operation is not the only way to validate resources - see [Validating Resources](https://www.hl7.org/fhir/validation.html) for further information."
									},
									"response": [
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"resource\": \"<object>\"\n        },\n        {\n            \"resource\": \"<object>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/$validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														"$validate"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"resource\": \"<object>\"\n        },\n        {\n            \"resource\": \"<object>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/:type/$validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														":type",
														"$validate"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "type"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Code System",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Code System based Validation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														":id",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														}
													]
												},
												"description": "Validate that a coded value is in the code system. If the operation is not called at the instance level, one of the parameters \"url\" or \"codeSystem\" must be provided. The operation returns a result (true / false), an error message, and the recommended display for the code.\n\nWhen invoking this operation, a client SHALL provide one (and only one) of the parameters (code+system, coding, or codeableConcept). Other parameters (including version and display) are optional"
											},
											"response": [
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Malformed request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										},
										{
											"name": "Subsumption Testing",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$subsumes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														":id",
														"$subsumes"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														}
													]
												},
												"description": "Test the subsumption relationship between code/Coding A and code/Coding B given the semantics of subsumption in the underlying code system (see [hierarchyMeaning](https://www.hl7.org/fhir/codesystem-definitions.html#CodeSystem.hierarchyMeaning)).\n\nWhen invoking this operation, a client SHALL provide both a and codes, either as code or Coding parameters. The system parameter is required unless the operation is invoked on an instance of a code system resource. Other parameters are optional"
											},
											"response": [
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$subsumes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$subsumes"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$subsumes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$subsumes"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Malformed request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$subsumes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$subsumes"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/:id/$subsumes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CodeSystem",
																":id",
																"$subsumes"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										}
									]
								},
								{
									"name": "Code System based Validation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$validate-code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"CodeSystem",
												"$validate-code"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "Validate that a coded value is in the code system. If the operation is not called at the instance level, one of the parameters \"url\" or \"codeSystem\" must be provided. The operation returns a result (true / false), an error message, and the recommended display for the code.\n\nWhen invoking this operation, a client SHALL provide one (and only one) of the parameters (code+system, coding, or codeableConcept). Other parameters (including version and display) are optional"
									},
									"response": [
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Malformed request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Concept Look Up & Decomposition",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"code\": \"<code>\"\n        },\n        {\n            \"code\": \"<code>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$lookup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"CodeSystem",
												"$lookup"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "Given a code/system, or a Coding, get additional details about the concept, including definition, status, designations, and properties. One of the products of this operation is a full decomposition of a code from a structured terminology.\n\nWhen invoking this operation, a client SHALL provide both a system and a code, either using the system+code parameters, or in the coding parameter. Other parameters are optional"
									},
									"response": [
										{
											"name": "Malformed request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"code\": \"<code>\"\n        },\n        {\n            \"code\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$lookup"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"code\": \"<code>\"\n        },\n        {\n            \"code\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$lookup"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"code\": \"<code>\"\n        },\n        {\n            \"code\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$lookup"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"code\": \"<code>\"\n        },\n        {\n            \"code\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$lookup"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Subsumption Testing",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$subsumes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"CodeSystem",
												"$subsumes"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "Test the subsumption relationship between code/Coding A and code/Coding B given the semantics of subsumption in the underlying code system (see [hierarchyMeaning](https://www.hl7.org/fhir/codesystem-definitions.html#CodeSystem.hierarchyMeaning)).\n\nWhen invoking this operation, a client SHALL provide both a and codes, either as code or Coding parameters. The system parameter is required unless the operation is invoked on an instance of a code system resource. Other parameters are optional"
									},
									"response": [
										{
											"name": "Malformed request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$subsumes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$subsumes"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$subsumes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$subsumes"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$subsumes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$subsumes"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"codeA\": \"<code>\"\n        },\n        {\n            \"codeA\": \"<code>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CodeSystem/$subsumes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CodeSystem",
														"$subsumes"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Concept Map",
							"item": [
								{
									"name": "Concept Translation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/$translate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"ConceptMap",
												"$translate"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "Translate a code from one value set to another, based on the existing value set and concept maps resources, and/or other additional knowledge available to the server. \r\n\r\n One (and only one) of the in parameters (code, coding, codeableConcept) must be provided, to identify the code that is to be translated.  \r\n\r\n The operation returns a set of parameters including a 'result' for whether there is an acceptable match, and a list of possible matches. Note that the list of matches may include notes of codes for which mapping is specifically excluded, so implementers have to check the match.equivalence for each match"
									},
									"response": [
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Malformed request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Concept Translation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/:id/$translate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"ConceptMap",
												":id",
												"$translate"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) id of the instance"
												}
											]
										},
										"description": "Translate a code from one value set to another, based on the existing value set and concept maps resources, and/or other additional knowledge available to the server. \r\n\r\n One (and only one) of the in parameters (code, coding, codeableConcept) must be provided, to identify the code that is to be translated.  \r\n\r\n The operation returns a set of parameters including a 'result' for whether there is an acceptable match, and a list of possible matches. Note that the list of matches may include notes of codes for which mapping is specifically excluded, so implementers have to check the match.equivalence for each match"
									},
									"response": [
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/:id/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														":id",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/:id/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														":id",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/:id/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														":id",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Malformed request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ConceptMap/:id/$translate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ConceptMap",
														":id",
														"$translate"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Patient",
							"item": [
								{
									"name": "Fetch Patient Record",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Patient/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Patient",
												"$everything"
											],
											"query": [
												{
													"key": "start",
													"value": "<date>",
													"description": "The date range relates to care dates, not record currency dates - e.g. all records relating to care provided in a certain date range. If no start date is provided, all records prior to the end date are in scope."
												},
												{
													"key": "end",
													"value": "<date>",
													"description": "The date range relates to care dates, not record currency dates - e.g. all records relating to care provided in a certain date range. If no end date is provided, all records subsequent to the start date are in scope."
												},
												{
													"key": "_since",
													"value": "<instant>",
													"description": "Resources updated after this period will be included in the response. The intent of this parameter is to allow a client to request only records that have changed since the last request, based on either the return header time, or or (for asynchronous use), the transaction time"
												},
												{
													"key": "_type",
													"value": "<code>",
													"description": "One or more parameters, each containing one or more comma-delimited FHIR resource types to include in the return resources. In the absence of any specified types, the server returns all resource types"
												},
												{
													"key": "_count",
													"value": "<integer>",
													"description": "See discussion below on the utility of paging through the results of the $everything operation"
												}
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "This operation is used to return all the information related to one or more patients described in the resource or context on which this operation is invoked. The response is a bundle of type \"searchset\". At a minimum, the patient resource(s) itself is returned, along with any other resources that the server has that are related to the patient(s), and that are available for the given user. The server also returns whatever resources are needed to support the records - e.g. linked practitioners, medications, locations, organizations etc.   \n\nThe intended use for this operation is to provide a patient with access to their entire record (e.g. \"Blue Button\"), or for provider or other user to perform a bulk data download.  The server SHOULD return at least all resources that it has that are in the patient compartment for the identified patient(s), and any resource referenced from those, including binaries and attachments. In the US Realm, at a minimum, the resources returned SHALL include all the data covered by the meaningful use common data elements as defined in the US Core Implementation Guide. Other applicable implementation guides may make additional rules about how much information that is returned."
									},
									"response": [
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/Patient/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"Patient",
														"$everything"
													],
													"query": [
														{
															"key": "start",
															"value": "<date>"
														},
														{
															"key": "end",
															"value": "<date>"
														},
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_type",
															"value": "<code>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/Patient/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"Patient",
														"$everything"
													],
													"query": [
														{
															"key": "start",
															"value": "<date>"
														},
														{
															"key": "end",
															"value": "<date>"
														},
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_type",
															"value": "<code>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Fetch Patient Record",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Patient/:id/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Patient",
												":id",
												"$everything"
											],
											"query": [
												{
													"key": "start",
													"value": "<date>",
													"description": "The date range relates to care dates, not record currency dates - e.g. all records relating to care provided in a certain date range. If no start date is provided, all records prior to the end date are in scope."
												},
												{
													"key": "end",
													"value": "<date>",
													"description": "The date range relates to care dates, not record currency dates - e.g. all records relating to care provided in a certain date range. If no end date is provided, all records subsequent to the start date are in scope."
												},
												{
													"key": "_since",
													"value": "<instant>",
													"description": "Resources updated after this period will be included in the response. The intent of this parameter is to allow a client to request only records that have changed since the last request, based on either the return header time, or or (for asynchronous use), the transaction time"
												},
												{
													"key": "_type",
													"value": "<code>",
													"description": "One or more parameters, each containing one or more comma-delimited FHIR resource types to include in the return resources. In the absence of any specified types, the server returns all resource types"
												},
												{
													"key": "_count",
													"value": "<integer>",
													"description": "See discussion below on the utility of paging through the results of the $everything operation"
												}
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) id of the instance"
												}
											]
										},
										"description": "This operation is used to return all the information related to one or more patients described in the resource or context on which this operation is invoked. The response is a bundle of type \"searchset\". At a minimum, the patient resource(s) itself is returned, along with any other resources that the server has that are related to the patient(s), and that are available for the given user. The server also returns whatever resources are needed to support the records - e.g. linked practitioners, medications, locations, organizations etc.   \n\nThe intended use for this operation is to provide a patient with access to their entire record (e.g. \"Blue Button\"), or for provider or other user to perform a bulk data download.  The server SHOULD return at least all resources that it has that are in the patient compartment for the identified patient(s), and any resource referenced from those, including binaries and attachments. In the US Realm, at a minimum, the resources returned SHALL include all the data covered by the meaningful use common data elements as defined in the US Core Implementation Guide. Other applicable implementation guides may make additional rules about how much information that is returned."
									},
									"response": [
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/Patient/:id/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"Patient",
														":id",
														"$everything"
													],
													"query": [
														{
															"key": "start",
															"value": "<date>"
														},
														{
															"key": "end",
															"value": "<date>"
														},
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_type",
															"value": "<code>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/Patient/:id/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"Patient",
														":id",
														"$everything"
													],
													"query": [
														{
															"key": "start",
															"value": "<date>"
														},
														{
															"key": "end",
															"value": "<date>"
														},
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_type",
															"value": "<code>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Medicinal Product",
							"item": [
								{
									"name": "Fetch Product Record",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/MedicinalProduct/$everything?_since=<instant>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"MedicinalProduct",
												"$everything"
											],
											"query": [
												{
													"key": "_since",
													"value": "<instant>",
													"description": "Resources updated after this period will be included in the response. The intent of this parameter is to allow a client to request only records that have changed since the last request, based on either the return header time, or or (for asynchronous use), the transaction time"
												},
												{
													"key": "_count",
													"value": "<integer>",
													"description": "See discussion below on the utility of paging through the results of the $everything operation"
												}
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "This operation is used to return all the information related to one or more products described in the resource or context on which this operation is invoked. The response is a bundle of type \"searchset\". At a minimum, the product resource(s) itself is returned, along with any other resources that the server has that are related to the products(s), and that are available for the given user. This is typically the marketing authorisations, ingredients, packages, therapeutic indications and so on. The server also returns whatever resources are needed to support the records - e.g. linked organizations, document references etc."
									},
									"response": [
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/MedicinalProduct/$everything?_since=<instant>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"MedicinalProduct",
														"$everything"
													],
													"query": [
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/MedicinalProduct/$everything?_since=<instant>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"MedicinalProduct",
														"$everything"
													],
													"query": [
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Fetch Product Record",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/MedicinalProduct/:id/$everything?_since=<instant>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"MedicinalProduct",
												":id",
												"$everything"
											],
											"query": [
												{
													"key": "_since",
													"value": "<instant>",
													"description": "Resources updated after this period will be included in the response. The intent of this parameter is to allow a client to request only records that have changed since the last request, based on either the return header time, or or (for asynchronous use), the transaction time"
												},
												{
													"key": "_count",
													"value": "<integer>",
													"description": "See discussion below on the utility of paging through the results of the $everything operation"
												}
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) id of the instance"
												}
											]
										},
										"description": "This operation is used to return all the information related to one or more products described in the resource or context on which this operation is invoked. The response is a bundle of type \"searchset\". At a minimum, the product resource(s) itself is returned, along with any other resources that the server has that are related to the products(s), and that are available for the given user. This is typically the marketing authorisations, ingredients, packages, therapeutic indications and so on. The server also returns whatever resources are needed to support the records - e.g. linked organizations, document references etc."
									},
									"response": [
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/MedicinalProduct/:id/$everything?_since=<instant>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"MedicinalProduct",
														":id",
														"$everything"
													],
													"query": [
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/MedicinalProduct/:id/$everything?_since=<instant>&_count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"MedicinalProduct",
														":id",
														"$everything"
													],
													"query": [
														{
															"key": "_since",
															"value": "<instant>"
														},
														{
															"key": "_count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Capability Statement",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Fetch a subset of the CapabilityStatement resource",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/:id/$subset?server=<uri>&resource=<code>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														":id",
														"$subset"
													],
													"query": [
														{
															"key": "server",
															"value": "<uri>",
															"description": "The canonical URL - use this if the subset is not invoked on an instance (or on the /metadata end-point)"
														},
														{
															"key": "resource",
															"value": "<code>",
															"description": "(Required) A resource that the client would like to include in the return"
														}
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														}
													]
												},
												"description": "This operation asks the server to return a subset of the CapabilityStatement resource - just the REST parts that relate to a set of nominated resources - the resources that the client is interested in"
											},
											"response": [
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/:id/$subset?server=<uri>&resource=<code>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CapabilityStatement",
																":id",
																"$subset"
															],
															"query": [
																{
																	"key": "server",
																	"value": "<uri>"
																},
																{
																	"key": "resource",
																	"value": "<code>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/:id/$subset?server=<uri>&resource=<code>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CapabilityStatement",
																":id",
																"$subset"
															],
															"query": [
																{
																	"key": "server",
																	"value": "<uri>"
																},
																{
																	"key": "resource",
																	"value": "<code>"
																}
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										},
										{
											"name": "Test if a server implements a client's required operations",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"server\": \"<canonical>\"\n        },\n        {\n            \"server\": \"<canonical>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/:id/$implements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														":id",
														"$implements"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														}
													]
												},
												"description": "This operation asks the server to check that it implements all the resources, interactions, search parameters, and operations that the client provides in its capability statement. The client provides its capability statement inline, or by referring the server to the canonical URL of its capability statement"
											},
											"response": [
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"server\": \"<canonical>\"\n        },\n        {\n            \"server\": \"<canonical>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/:id/$implements",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CapabilityStatement",
																":id",
																"$implements"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"server\": \"<canonical>\"\n        },\n        {\n            \"server\": \"<canonical>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/:id/$implements",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"CapabilityStatement",
																":id",
																"$implements"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										}
									]
								},
								{
									"name": "Fetch a subset of the CapabilityStatement resource",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$subset?server=<uri>&resource=<code>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"CapabilityStatement",
												"$subset"
											],
											"query": [
												{
													"key": "server",
													"value": "<uri>",
													"description": "The canonical URL - use this if the subset is not invoked on an instance (or on the /metadata end-point)"
												},
												{
													"key": "resource",
													"value": "<code>",
													"description": "(Required) A resource that the client would like to include in the return"
												}
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "This operation asks the server to return a subset of the CapabilityStatement resource - just the REST parts that relate to a set of nominated resources - the resources that the client is interested in"
									},
									"response": [
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$subset?server=<uri>&resource=<code>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														"$subset"
													],
													"query": [
														{
															"key": "server",
															"value": "<uri>"
														},
														{
															"key": "resource",
															"value": "<code>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$subset?server=<uri>&resource=<code>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														"$subset"
													],
													"query": [
														{
															"key": "server",
															"value": "<uri>"
														},
														{
															"key": "resource",
															"value": "<code>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Test if a server implements a client's required operations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$conforms?left=<canonical>&right=<canonical>&mode=<code>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"CapabilityStatement",
												"$conforms"
											],
											"query": [
												{
													"key": "left",
													"value": "<canonical>",
													"description": "A canonical reference to the left-hand system's capability statement"
												},
												{
													"key": "right",
													"value": "<canonical>",
													"description": "A canonical reference to the right-hand system's capability statement"
												},
												{
													"key": "mode",
													"value": "<code>",
													"description": "What kind of comparison to perform - server to server, or client to server (use the codes 'server/server' or 'client/server')"
												}
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "This operation asks the server to check that it implements all the resources, interactions, search parameters, and operations that the client provides in its capability statement. The client provides both capability statements by reference, and must ensure that all the referenced resources are available to the conformance server"
									},
									"response": [
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$conforms?left=<canonical>&right=<canonical>&mode=<code>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														"$conforms"
													],
													"query": [
														{
															"key": "left",
															"value": "<canonical>"
														},
														{
															"key": "right",
															"value": "<canonical>"
														},
														{
															"key": "mode",
															"value": "<code>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$conforms?left=<canonical>&right=<canonical>&mode=<code>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														"$conforms"
													],
													"query": [
														{
															"key": "left",
															"value": "<canonical>"
														},
														{
															"key": "right",
															"value": "<canonical>"
														},
														{
															"key": "mode",
															"value": "<code>"
														}
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Test if a server implements a client's required operations",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"server\": \"<canonical>\"\n        },\n        {\n            \"server\": \"<canonical>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$implements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"CapabilityStatement",
												"$implements"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "This operation asks the server to check that it implements all the resources, interactions, search parameters, and operations that the client provides in its capability statement. The client provides its capability statement inline, or by referring the server to the canonical URL of its capability statement"
									},
									"response": [
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"server\": \"<canonical>\"\n        },\n        {\n            \"server\": \"<canonical>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$implements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														"$implements"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"server\": \"<canonical>\"\n        },\n        {\n            \"server\": \"<canonical>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/CapabilityStatement/$implements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"CapabilityStatement",
														"$implements"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Structure Definition",
							"item": [
								{
									"name": "Generate Snapshot",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureDefinition/$snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"StructureDefinition",
												"$snapshot"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "Generates a [StructureDefinition](https://www.hl7.org/fhir/structuredefinition.html) instance  with  a snapshot, based on a differential in a specified [StructureDefinition](https://www.hl7.org/fhir/structuredefinition.html).   \n\nIf the operation is not called at the instance level, either *definition* or *url* 'in' parameters must be provided. If more than one is specified, servers may raise an error or may resolve with the parameter of their choice. If called at the instance level, these parameters will be ignored."
									},
									"response": [
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureDefinition/$snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureDefinition",
														"$snapshot"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureDefinition/$snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureDefinition",
														"$snapshot"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Generate Snapshot",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureDefinition/:id/$snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"StructureDefinition",
												":id",
												"$snapshot"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) id of the instance"
												}
											]
										},
										"description": "Generates a [StructureDefinition](https://www.hl7.org/fhir/structuredefinition.html) instance  with  a snapshot, based on a differential in a specified [StructureDefinition](https://www.hl7.org/fhir/structuredefinition.html).   \n\nIf the operation is not called at the instance level, either *definition* or *url* 'in' parameters must be provided. If more than one is specified, servers may raise an error or may resolve with the parameter of their choice. If called at the instance level, these parameters will be ignored."
									},
									"response": [
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureDefinition/:id/$snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureDefinition",
														":id",
														"$snapshot"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"definition\": {\n                \"abstract\": \"<boolean>\",\n                \"kind\": \"<string>\",\n                \"name\": \"<string>\",\n                \"status\": \"<string>\",\n                \"type\": \"<uri>\",\n                \"url\": \"<uri>\",\n                \"id\": \"<string>\",\n                \"meta\": {\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"versionId\": \"<id>\",\n                    \"lastUpdated\": \"<instant>\",\n                    \"source\": \"<uri>\",\n                    \"profile\": [\n                        \"<canonical>\",\n                        \"<canonical>\"\n                    ],\n                    \"security\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"tag\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"implicitRules\": \"<uri>\",\n                \"language\": \"<code>\",\n                \"text\": {\n                    \"div\": \"<xhtml>\",\n                    \"status\": \"<string>\",\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"contained\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"extension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"modifierExtension\": [\n                    \"<object>\",\n                    \"<object>\"\n                ],\n                \"identifier\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"use\": \"<string>\",\n                        \"type\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"system\": \"<uri>\",\n                        \"value\": \"<string>\",\n                        \"period\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"assigner\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ],\n                \"version\": \"<string>\",\n                \"title\": \"<string>\",\n                \"experimental\": \"<boolean>\",\n                \"date\": \"<dateTime>\",\n                \"publisher\": \"<string>\",\n                \"contact\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"name\": \"<string>\",\n                        \"telecom\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"<markdown>\",\n                \"useContext\": [\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"code\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"jurisdiction\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"coding\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"text\": \"<string>\"\n                    }\n                ],\n                \"purpose\": \"<markdown>\",\n                \"copyright\": \"<markdown>\",\n                \"keyword\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"system\": \"<uri>\",\n                        \"version\": \"<string>\",\n                        \"code\": \"<code>\",\n                        \"display\": \"<string>\",\n                        \"userSelected\": \"<boolean>\"\n                    }\n                ],\n                \"fhirVersion\": \"<string>\",\n                \"mapping\": [\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    },\n                    {\n                        \"identity\": \"<id>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"uri\": \"<uri>\",\n                        \"name\": \"<string>\",\n                        \"comment\": \"<string>\"\n                    }\n                ],\n                \"context\": [\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    },\n                    {\n                        \"expression\": \"<string>\",\n                        \"type\": \"<string>\",\n                        \"id\": \"<string>\",\n                        \"extension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        \"modifierExtension\": [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    }\n                ],\n                \"contextInvariant\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"baseDefinition\": \"<canonical>\",\n                \"derivation\": \"<string>\",\n                \"snapshot\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                },\n                \"differential\": {\n                    \"element\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"id\": \"<string>\",\n                    \"extension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ],\n                    \"modifierExtension\": [\n                        \"<object>\",\n                        \"<object>\"\n                    ]\n                }\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureDefinition/:id/$snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureDefinition",
														":id",
														"$snapshot"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Structure Map",
							"item": [
								{
									"name": "Model Instance Transformation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"source\": \"<uri>\"\n        },\n        {\n            \"source\": \"<uri>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureMap/$transform",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"StructureMap",
												"$transform"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "The transform operation takes input content, applies a structure map transform, and then returns the output."
									},
									"response": [
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"source\": \"<uri>\"\n        },\n        {\n            \"source\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureMap/$transform",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureMap",
														"$transform"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"source\": \"<uri>\"\n        },\n        {\n            \"source\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureMap/$transform",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureMap",
														"$transform"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Model Instance Transformation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"source\": \"<uri>\"\n        },\n        {\n            \"source\": \"<uri>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureMap/:id/$transform",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"StructureMap",
												":id",
												"$transform"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) id of the instance"
												}
											]
										},
										"description": "The transform operation takes input content, applies a structure map transform, and then returns the output."
									},
									"response": [
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"source\": \"<uri>\"\n        },\n        {\n            \"source\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureMap/:id/$transform",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureMap",
														":id",
														"$transform"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"source\": \"<uri>\"\n        },\n        {\n            \"source\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/StructureMap/:id/$transform",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"StructureMap",
														":id",
														"$transform"
													],
													"variable": [
														{
															"key": "fhir_version"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Value Set",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Value Set Expansion",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$expand",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														":id",
														"$expand"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														}
													]
												},
												"description": "The definition of a value set is used to create a simple collection of codes suitable for use for data entry or validation. \n\nIf the operation is not called at the instance level, one of the in parameters url, context or valueSet must be provided.  An expanded value set will be returned, or an OperationOutcome with an error message."
											},
											"response": [
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$expand",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$expand"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$expand",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$expand"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Malformed request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$expand",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$expand"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$expand",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$expand"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										},
										{
											"name": "Value Set based Validation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														":id",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Version of the FHIR"
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) id of the instance"
														}
													]
												},
												"description": "Validate that a coded value is in the set of codes allowed by a value set.\n\nIf the operation is not called at the instance level, one of the in parameters url, context or  valueSet must be provided.  One (and only one) of the in parameters code, coding, or codeableConcept must be provided.  The operation returns a result (true / false), an error message, and the recommended display for the code"
											},
											"response": [
												{
													"name": "Malformed request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Out parameters defined in specification",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/fhir+json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/:id/$validate-code",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																":fhir_version",
																"ValueSet",
																":id",
																"$validate-code"
															],
															"variable": [
																{
																	"key": "fhir_version"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<json>\""
												}
											]
										}
									]
								},
								{
									"name": "Value Set Expansion",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$expand",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"ValueSet",
												"$expand"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "The definition of a value set is used to create a simple collection of codes suitable for use for data entry or validation. \n\nIf the operation is not called at the instance level, one of the in parameters url, context or valueSet must be provided.  An expanded value set will be returned, or an OperationOutcome with an error message."
									},
									"response": [
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$expand",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$expand"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$expand",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$expand"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Malformed request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$expand",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$expand"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$expand",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$expand"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								},
								{
									"name": "Value Set based Validation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$validate-code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"ValueSet",
												"$validate-code"
											],
											"variable": [
												{
													"key": "fhir_version",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Version of the FHIR"
												}
											]
										},
										"description": "Validate that a coded value is in the set of codes allowed by a value set.\n\nIf the operation is not called at the instance level, one of the in parameters url, context or  valueSet must be provided.  One (and only one) of the in parameters code, coding, or codeableConcept must be provided.  The operation returns a result (true / false), an error message, and the recommended display for the code"
									},
									"response": [
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Malformed request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Out parameters defined in specification",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/fhir+json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameter\": [\n        {\n            \"url\": \"<uri>\"\n        },\n        {\n            \"url\": \"<uri>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/:fhir_version/ValueSet/$validate-code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														":fhir_version",
														"ValueSet",
														"$validate-code"
													],
													"variable": [
														{
															"key": "fhir_version"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<json>\""
										}
									]
								}
							]
						},
						{
							"name": "Search all resources",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version?parameters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version"
									],
									"query": [
										{
											"key": "parameters",
											"value": "<string>",
											"description": "search criteria"
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
										}
									]
								}
							},
							"response": [
								{
									"name": "resource type not supported, or not a FHIR end-point",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version?parameters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version"
											],
											"query": [
												{
													"key": "parameters",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "search could not be processed or failed basic FHIR validation rules",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version?parameters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version"
											],
											"query": [
												{
													"key": "parameters",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "successful search",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version?parameters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version"
											],
											"query": [
												{
													"key": "parameters",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "authorization is required for the interaction that was attempted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version?parameters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version"
											],
											"query": [
												{
													"key": "parameters",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Post a batch or transaction",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<object>\""
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
										}
									]
								},
								"description": "Submit a set of actions to perform on a server in a single HTTP request/response. The actions may be performed independently as a 'batch', or as a single atomic 'transaction' where the entire set of changes succeed or fail as a single entity."
							},
							"response": [
								{
									"name": "successful batch/transaction",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<object>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "all transaction resources rejected",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<object>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Get the version history of all resources",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/_history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"_history"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
										}
									]
								}
							},
							"response": [
								{
									"name": "a Bundle with type set to history containing the specified version history, sorted with oldest versions last, and including deleted resources",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/_history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"_history"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Get this FHIR server's metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"metadata"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
										}
									]
								},
								"description": "Retrieves the server's Capability Statement that defines how it supports resources."
							},
							"response": [
								{
									"name": "the servers Capability Statement",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"metadata"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Get OpenAPI spec",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/openapi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"openapi"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								}
							},
							"response": [
								{
									"name": "the openapi document",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/openapi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"openapi"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/openapi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"openapi"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "AsyncCancel",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/$async-cancel?operation=<string>&operation_uri=<url>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"$async-cancel"
									],
									"query": [
										{
											"key": "operation",
											"value": "<string>",
											"description": "(Required) Asynchronous operation to cancel"
										},
										{
											"key": "operation_uri",
											"value": "<url>",
											"description": "(Required) Canonical URI of asynchronous operation"
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								}
							},
							"response": [
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$async-cancel?operation=<string>&operation_uri=<url>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$async-cancel"
											],
											"query": [
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "operation_uri",
													"value": "<url>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$async-cancel?operation=<string>&operation_uri=<url>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$async-cancel"
											],
											"query": [
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "operation_uri",
													"value": "<url>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "AsyncStatus",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/$async-status?operation=<string>&operation_uri=<url>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"$async-status"
									],
									"query": [
										{
											"key": "operation",
											"value": "<string>",
											"description": "(Required) Asynchronous operation to check status for"
										},
										{
											"key": "operation_uri",
											"value": "<url>",
											"description": "(Required) Canonical URI of asynchronous operation"
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								}
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$async-status?operation=<string>&operation_uri=<url>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$async-status"
											],
											"query": [
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "operation_uri",
													"value": "<url>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$async-status?operation=<string>&operation_uri=<url>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$async-status"
											],
											"query": [
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "operation_uri",
													"value": "<url>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Bulk delete data from a FHIR server",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/$bulk-delete?_since=<instant>&_until=<instant>&_type=<string>&_typeFilter=<string>&_lists=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"$bulk-delete"
									],
									"query": [
										{
											"key": "_since",
											"value": "<instant>",
											"description": "First updated timestamp of the resources to delete."
										},
										{
											"key": "_until",
											"value": "<instant>",
											"description": "Last updated timestamp of the resources to delete."
										},
										{
											"key": "_type",
											"value": "<string>",
											"description": "Comma-separated list of FHIR resource types to delete."
										},
										{
											"key": "_typeFilter",
											"value": "<string>",
											"description": "Comma-separated list of FHIR REST API queries."
										},
										{
											"key": "_lists",
											"value": "<string>",
											"description": "Comma-separated list of subscriptions."
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								}
							},
							"response": [
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$bulk-delete?_since=<instant>&_until=<instant>&_type=<string>&_typeFilter=<string>&_lists=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$bulk-delete"
											],
											"query": [
												{
													"key": "_since",
													"value": "<instant>"
												},
												{
													"key": "_until",
													"value": "<instant>"
												},
												{
													"key": "_type",
													"value": "<string>"
												},
												{
													"key": "_typeFilter",
													"value": "<string>"
												},
												{
													"key": "_lists",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$bulk-delete?_since=<instant>&_until=<instant>&_type=<string>&_typeFilter=<string>&_lists=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$bulk-delete"
											],
											"query": [
												{
													"key": "_since",
													"value": "<instant>"
												},
												{
													"key": "_until",
													"value": "<instant>"
												},
												{
													"key": "_type",
													"value": "<string>"
												},
												{
													"key": "_typeFilter",
													"value": "<string>"
												},
												{
													"key": "_lists",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Export data from a FHIR server",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameter\": [\n        {\n            \"_since\": \"<instant>\"\n        },\n        {\n            \"_since\": \"<instant>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/$export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"$export"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								}
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"_since\": \"<instant>\"\n        },\n        {\n            \"_since\": \"<instant>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$export"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"_since\": \"<instant>\"\n        },\n        {\n            \"_since\": \"<instant>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$export"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Import data from a FHIR server",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameter\": [\n        {\n            \"input_format\": \"<string>\"\n        },\n        {\n            \"input_format\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/$import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"$import"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								}
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"input_format\": \"<string>\"\n        },\n        {\n            \"input_format\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$import"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"input_format\": \"<string>\"\n        },\n        {\n            \"input_format\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$import"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Closure Table Maintenance",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameter\": [\n        {\n            \"name\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/$closure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"$closure"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								},
								"description": "This operation provides support for ongoing maintenance of a client-side [transitive closure table](https://en.wikipedia.org/wiki/Transitive_closure#In_graph_theory) based on server-side terminological logic. For details of how this is used, see [Maintaining a Closure Table](https://www.hl7.org/fhir/terminology-service.html#closure)"
							},
							"response": [
								{
									"name": "Resource not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"name\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$closure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$closure"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"name\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$closure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$closure"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"name\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$closure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$closure"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Malformed request parameters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameter\": [\n        {\n            \"name\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$closure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$closure"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Discover what versions a server supports",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/$versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"$versions"
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								},
								"description": "Using the [FHIR Version Mime Type Parameter](https://www.hl7.org/fhir/http.html#version-parameter), a server can support [multiple versions on the same end-point](https://www.hl7.org/fhir/versioning.html#mt-version). The only way for client to find out what versions a server supports in this fashion is the $versions operation. The client invokes the operation with no parameters. and the server returns the list of supported versions, along with the default version it will use if no fhirVersion parameter is present"
							},
							"response": [
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$versions"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/$versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"$versions"
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Fetch Encounter Record",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/Encounter/:id/$everything?_since=<instant>&_type=<code>&_count=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"Encounter",
										":id",
										"$everything"
									],
									"query": [
										{
											"key": "_since",
											"value": "<instant>",
											"description": "Resources updated after this period will be included in the response. The intent of this parameter is to allow a client to request only records that have changed since the last request, based on either the return header time, or or (for asynchronous use), the transaction time"
										},
										{
											"key": "_type",
											"value": "<code>",
											"description": "One or more parameters, each containing one or more comma-delimited FHIR resource types to include in the return resources. In the absense of any specified types, the server returns all resource types"
										},
										{
											"key": "_count",
											"value": "<integer>",
											"description": "See discussion below on the utility of paging through the results of the $everything operation"
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										},
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) id of the instance"
										}
									]
								},
								"description": "This operation is used to return all the information related to an encounter described in the resource on which this operation is invoked. The response is a bundle of type \"searchset\". At a minimum, the encounter resource itself is returned, along with any other resources that the server has available for the given encounter for the user. The server also returns whatever resources are needed to support the records - e.g. linked practitioners, locations, organizations etc. The principle intended use for this operation is to provide a patient with access to their record, or to allow a client to retrieve everything for an encounter for efficient display).\r\rThe server SHOULD return all resources it has that:\r\r* are included in the encounter compartment for the identified encounter (have a reference to the encounter)\r* are referenced by the standard extenstion for associating an encounter (where no reference element exists) http://hl7.org/fhir/StructureDefinition/encounter-associatedEncounter\r* the server believes are relevant to the context of the encounter for any other reason (internally defined/decided)\r* any resource referenced by the above, including binaries and attachments (to make a more complete package)\r\rIn the US Realm, at a mimimum, the resources returned SHALL include all the data covered by the meaningful use common data elements (see [DAF](http://hl7.org/fhir/us/daf) for further guidance). Other applicable implementation guides may make additional rules about the information that is returned.   Note that for many resources, the exact nature of the link to encounter can be ambiguous (e.g. for a DiagnosticReport, is it the encounter when it was initiated, or when it was reported?)"
							},
							"response": [
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Encounter/:id/$everything?_since=<instant>&_type=<code>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Encounter",
												":id",
												"$everything"
											],
											"query": [
												{
													"key": "_since",
													"value": "<instant>"
												},
												{
													"key": "_type",
													"value": "<code>"
												},
												{
													"key": "_count",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Encounter/:id/$everything?_since=<instant>&_type=<code>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Encounter",
												":id",
												"$everything"
											],
											"query": [
												{
													"key": "_since",
													"value": "<instant>"
												},
												{
													"key": "_type",
													"value": "<code>"
												},
												{
													"key": "_count",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Fetch a group of Patient Records",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/Group/:id/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"Group",
										":id",
										"$everything"
									],
									"query": [
										{
											"key": "start",
											"value": "<date>",
											"description": "The date range relates to care dates, not record currency dates - e.g. all records relating to care provided in a certain date range. If no start date is provided, all records prior to the end date are in scope."
										},
										{
											"key": "end",
											"value": "<date>",
											"description": "The date range relates to care dates, not record currency dates - e.g. all records relating to care provided in a certain date range. If no end date is provided, all records subsequent to the start date are in scope."
										},
										{
											"key": "_since",
											"value": "<instant>",
											"description": "Resources updated after this period will be included in the response. The intent of this parameter is to allow a client to request only records that have changed since the last request, based on either the return header time, or or (for asynchronous use), the transaction time"
										},
										{
											"key": "_type",
											"value": "<code>",
											"description": "One or more parameters, each containing one or more comma-delimited FHIR resource types to include in the return resources. In the absense of any specified types, the server returns all resource types"
										},
										{
											"key": "_count",
											"value": "<integer>",
											"description": "See discussion below on the utility of paging through the results of the $everything operation"
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										},
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) id of the instance"
										}
									]
								},
								"description": "This operation is used to return all the information related to one or more patients that are part of the group on which this operation is invoked. The response is a bundle of type \"searchset\". At a minimum, the patient resource(s) itself is returned, along with any other resources that the server has that are related to the patient(s), and that are available for the given user. The server also returns whatever resources are needed to support the records - e.g. linked practitioners, medications, locations, organizations etc.   The intended use for this operation is for a provider or other user to perform a bulk data download.  The server SHOULD return at least all resources that it has that are in the patient compartment for the identified patient(s), and any resource referenced from those, including binaries and attachments. In the US Realm, at a mimimum, the resources returned SHALL include all the data covered by the meaningful use common data elements as defined in [US-Core](http://hl7.org/fhir/us/coref). Other applicable implementation guides may make additional rules about how much information that is returned."
							},
							"response": [
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Group/:id/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Group",
												":id",
												"$everything"
											],
											"query": [
												{
													"key": "start",
													"value": "<date>"
												},
												{
													"key": "end",
													"value": "<date>"
												},
												{
													"key": "_since",
													"value": "<instant>"
												},
												{
													"key": "_type",
													"value": "<code>"
												},
												{
													"key": "_count",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Group/:id/$everything?start=<date>&end=<date>&_since=<instant>&_type=<code>&_count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Group",
												":id",
												"$everything"
											],
											"query": [
												{
													"key": "start",
													"value": "<date>"
												},
												{
													"key": "end",
													"value": "<date>"
												},
												{
													"key": "_since",
													"value": "<instant>"
												},
												{
													"key": "_type",
													"value": "<code>"
												},
												{
													"key": "_count",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Find a functional list",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/List/$find?patient=<id>&name=<code>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"List",
										"$find"
									],
									"query": [
										{
											"key": "patient",
											"value": "<id>",
											"description": "(Required) The id of a patient resource located on the server on which this operation is executed"
										},
										{
											"key": "name",
											"value": "<code>",
											"description": "(Required) The code for the functional list that is being found"
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								},
								"description": "This operation allows a client to find an identified list for a particular function by its function. The operation takes two parameters, the identity of a patient, and the name of a functional list.     The list of defined functional lists can be found at [Current Resource Lists](https://www.hl7.org/fhir/lifecycle.html#lists). Applications are not required to support all the lists, and may define additional lists of their own.   If the system is able to locate a list that serves the identified purpose, it returns it as the body of the response with a 200 OK status. If the resource cannot be located, the server returns a 404 not found (optionally with an OperationOutcome resource)"
							},
							"response": [
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/List/$find?patient=<id>&name=<code>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"List",
												"$find"
											],
											"query": [
												{
													"key": "patient",
													"value": "<id>"
												},
												{
													"key": "name",
													"value": "<code>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/List/$find?patient=<id>&name=<code>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"List",
												"$find"
											],
											"query": [
												{
													"key": "patient",
													"value": "<id>"
												},
												{
													"key": "name",
													"value": "<code>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						},
						{
							"name": "Last N Observations Query",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/:fhir_version/Observation/$lastn?max=<positiveInt>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										":fhir_version",
										"Observation",
										"$lastn"
									],
									"query": [
										{
											"key": "max",
											"value": "<positiveInt>",
											"description": "`max` is  an optional input parameter to the *lastn* query operation.  It is used to specify the maximum number of Observations to return from each group. For example for the query \"Fetch the last 3 results for all vitals for a patient\" `max` = 3."
										}
									],
									"variable": [
										{
											"key": "fhir_version",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Version of the FHIR"
										}
									]
								},
								"description": "The *lastn query* meets the common need for searching for the most recent or last n=number of observations for a subject. For example, retrieving the last 5 temperatures for a patient to view trends or fetching the most recent laboratory results or vitals signs. To ask a server to return the last n=number of observations, the *lastn* query uses the [normal search parameters](https://www.hl7.org/fhir/observation.html#search) defined for the Observation resource.  However, rather than their normal use, they are interpreted as inputs - i.e.. instead of requiring that the resources literally contain the search parameters, they are passed to a server algorithm of some kind that uses them to determine the most appropriate matches.\n\nThe request for a lastn query SHALL include:\n\n* A `$lastn` operation parameter\n*  A subject using either the `patient` or `subject`  search parameter\n*  A `category` parameter and/or a search parameter that contains a code element in its FHIRpath expression.  ( e.g., `code` or `code-value-concept`)\n\nThe request for a lastn query MAY include:\n\n* Other Observation search parameters and modifiers\n\nThe response from a lastn query is a set of observations:\n\n*  Filtered by additional parameters\n   * If not explicitly filtered by status then will include statuses of 'entered-in-error'\n* 'GROUP BY' `Observation.code`\n   * Codes SHALL be considered equivalent if the `coding.value` *and* `coding.system` are the same.\n   * Text only codes SHALL be treated and grouped based on the text.\n   * For codes with translations (multiple codings), the code translations are assumed to be equal and the grouping by code SHALL follow the transitive property of equality.\n\nfor example:\n\n|Observation.code for observation a|Observation.code for observation b|Observation.code for observation c|number of groups [codes/text in each group]|    \n|---|---|---|---|     \n|a|b|c | 3 [a],[b],[c]|    \n|a|b|a,c | 2 [a.c],[b]|     \n|a|b|a,b | 1 [a,b]|    \n|'textM'|'Text'|'t e x t'|3 ['text'],['Text'],['t e x t']|\n\n* Sorted from most recent to the oldest\n* Limited to the number of requested responses per group specified by the optional *max* query parameter\n  * In case of a tie - when the effective times for >1 Observations are equal - both will be returned.  Therefore, more Observations may be returned than is specified in *max*.  For example, 4 Observations instead of 3 if the 3rd and 4th most recent observation had the same effective time.\n* If no maximum number is given then only the most recent Observation in each group is returned.\n\nThe set of returned observations should represent distinct real world observations and not the same observation with changes in status or versions. If there are no matches, the *lastn* query SHALL return an empty search set with no error, but may include an operation outcome with further advice."
							},
							"response": [
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Observation/$lastn?max=<positiveInt>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Observation",
												"$lastn"
											],
											"query": [
												{
													"key": "max",
													"value": "<positiveInt>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								},
								{
									"name": "Out parameters defined in specification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/:fhir_version/Observation/$lastn?max=<positiveInt>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												":fhir_version",
												"Observation",
												"$lastn"
											],
											"query": [
												{
													"key": "max",
													"value": "<positiveInt>"
												}
											],
											"variable": [
												{
													"key": "fhir_version"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/fhir+json"
										}
									],
									"cookie": [],
									"body": "\"<json>\""
								}
							]
						}
					]
				},
				{
					"name": "SMART App Launch Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/r4/.well-known/smart-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"r4",
								".well-known",
								"smart-configuration"
							]
						},
						"description": "[SMART App Launch configuration](http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#using-well-known)."
					},
					"response": [
						{
							"name": "SMART App Launch Configuration",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/r4/.well-known/smart-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"r4",
										".well-known",
										"smart-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authorization_endpoint\": \"<url>\",\n \"token_endpoint\": \"<url>\",\n \"capabilities\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"scopes_supported\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"response_types_supported\": [\n  \"<space-delimited>\",\n  \"<space-delimited>\"\n ],\n \"token_endpoint_auth_methods\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "Authorization Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/authorize?response_type=<space-delimited>&client_id=<string>&redirect_uri=<url>&scope=<space-delimited>&state=<string>&nonce=<string>&code_challenge=<string>&code_challenge_method=<string>&launch=<string>&aud=<url>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"authorize"
							],
							"query": [
								{
									"key": "response_type",
									"value": "<space-delimited>",
									"description": "(Required) Specifies the desired authentication flow. This parameter is a space-delimited string that supports any combination of the following values:\n* `code`: [Authorization Code](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth) flow.\n* `token`: [Implicit](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth) flow.\n* `id_token`: [Implicit](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth) flow.\n\nThe most common and secure usage is to pass the value `code`, which indicates that the client wishes to receive a single-use authorization `code` at its `redirect_uri`, which can then be exchanged for an access token using the Token Endpoint.\n\nAlternatively, the values `token` or `token id_token` (if using the `openid` scope) indicate that the client wishes to receive an access token and optional OpenID Connect ID token at its `redirect_uri` utilizing the [Implicit](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth) flow. Finally, combinations such as `code token id_token` may also be used for the [Hybrid](https://openid.net/specs/openid-connect-core-1_0.html#HybridFlowAuth) flow.\n\n**For security reasons, the Implicit and Hybrid flows may not be enabled in all Commure Platform environments.**"
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) Client identifier provided by Commure."
								},
								{
									"key": "redirect_uri",
									"value": "<url>",
									"description": "(Required) The URL to which the user should be navigated following completion or failure of the SSO process. For security reasons, this URL *must* be pre-configured with the Commure Platform; otherwise, the user will be presented with an error message."
								},
								{
									"key": "scope",
									"value": "<space-delimited>",
									"description": "(Required) Specifies the scope of the access request. This parameter is a space-delimited string that supports any combination of the following values:\n* `openid`: Requests that the Token Endpoint return an OpenID Connect ID token.\n* `profile`: Requests that the OpenID Connect ID token contain the user's default profile claims (`name`, `family_name`, `given_name`, etc.).\n* `email`: Requests that the OpenID Connect ID token contain the `email` claim.\n* `phone`: Requests that the OpenID Connect ID token contain the user's phone number.\n* `address`: Requests that the OpenID Connect ID token contain the user's address.\n* `fhirUser`: Requests that the OpenID Connect ID token contain the SMART App Launch `fhirUser` claim."
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "(Required) Opaque value used for passing state to the `redirect_uri` and mitigating session fixation/cross-site request forgery (CSRF) vulnerabilities. Clients not using the `<CommureSmartApp/>` React component should include a cryptographically secure pseudorandom value in the `state` parameter for each authentication request and verify this value at the specified `redirect_uri`, as described in [Section 10.12 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-10.12)."
								},
								{
									"key": "nonce",
									"value": "<string>",
									"description": "Value used for mitigating ID token replay vulnerabilities. If the `openid` scope is requested, this parameter will be included as the `nonce` value in the OpenID Connect ID token. Clients not using the `<CommureSmartApp/>` React component should provide a cryptographically secure pseudorandom `nonce` value for each authentication request and verify that the `nonce` contained in the ID token returned by the Token Endpoint (or passed to the `redirect_uri` in the Implicit or Hybrid flows) matches this value."
								},
								{
									"key": "code_challenge",
									"value": "<string>",
									"description": "[Proof Key for Code Exchange (PKCE)](https://tools.ietf.org/html/rfc7636) challenge for mitigating authorization code interception attacks. Clients without a client secret are strongly encouraged to use PKCE when utilizing the Authorization Code flow."
								},
								{
									"key": "code_challenge_method",
									"value": "<string>",
									"description": "[Proof Key for Code Exchange (PKCE)](https://tools.ietf.org/html/rfc7636) challenge method. For security reasons, the Commure Authentication API only supports the `S256` (SHA-256) challenge method."
								},
								{
									"key": "launch",
									"value": "<string>",
									"description": "Opaque value issued by the EHR during the [SMART EHR launch sequence](https://www.hl7.org/fhir/smart-app-launch/#ehr-launch-sequence). If omitted, the [SMART standalone launch sequence](https://www.hl7.org/fhir/smart-app-launch/#standalone-launch-sequence) is used."
								},
								{
									"key": "aud",
									"value": "<url>",
									"description": "URL of the EHR FHIR server that should be used to authenticate the user. This URL must be pre-configured with the Commure Platform. This parameter is required for the [SMART EHR launch sequence](https://www.hl7.org/fhir/smart-app-launch/#ehr-launch-sequence) and is typically used alongside the `launch` parameter. However, it may optionally be specified for the [SMART standalone launch sequence](https://www.hl7.org/fhir/smart-app-launch/#standalone-launch-sequence) as well."
								}
							]
						},
						"description": "This endpoint allows clients to initiate the OpenID Connect/SMART App Launch authentication process. The Commure Authentication API supports the OpenID Connect [Authorization Code](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth), [Implicit](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth), and [Hybrid](https://openid.net/specs/openid-connect-core-1_0.html#HybridFlowAuth) flows, combined with the [SMART EHR launch sequence](https://www.hl7.org/fhir/smart-app-launch/#ehr-launch-sequence) and [SMART standalone launch sequence](https://www.hl7.org/fhir/smart-app-launch/#standalone-launch-sequence).\n\nTo initiate the authentication process, clients should navigate the user to this endpoint, which will authenticate the user via single sign-on (SSO), typically using an SSO provider configured by a hospital. After the SSO process completes, the user will be redirected to the URL specified in the `redirect_uri` query parameter. This callback will include query parameters that depend on the requested `response_type`, as defined by [OpenID Connect](https://openid.net/specs/openid-connect-core-1_0.html). If an error occurs, the user will be forwarded to the `redirect_uri` with an [error response](https://openid.net/specs/openid-connect-core-1_0.html#AuthError)."
					},
					"response": [
						{
							"name": "Redirect user to single sign-on (SSO) provider or error callback",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/authorize?response_type=<space-delimited>&client_id=<string>&redirect_uri=<url>&scope=<space-delimited>&state=<string>&nonce=<string>&code_challenge=<string>&code_challenge_method=<string>&launch=<string>&aud=<url>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "<space-delimited>"
										},
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "redirect_uri",
											"value": "<url>"
										},
										{
											"key": "scope",
											"value": "<space-delimited>"
										},
										{
											"key": "state",
											"value": "<string>"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "code_challenge",
											"value": "<string>"
										},
										{
											"key": "code_challenge_method",
											"value": "<string>"
										},
										{
											"key": "launch",
											"value": "<string>"
										},
										{
											"key": "aud",
											"value": "<url>"
										}
									]
								}
							},
							"status": "See Other",
							"code": 303,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "<url>",
									"description": "On success, this header contains a redirect URL to the SSO provider. On failure (only if the `client_id` and `redirect_uri` are valid), this header contains a URL redirecting the user back to the specified `redirect_uri` along with the query parameters `error`, `error_description`, and `state`, as described in [Section 4.1.2.1 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-4.1.2.1)."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid `client_id` or `redirect_uri`",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/authorize?response_type=<space-delimited>&client_id=<string>&redirect_uri=<url>&scope=<space-delimited>&state=<string>&nonce=<string>&code_challenge=<string>&code_challenge_method=<string>&launch=<string>&aud=<url>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "<space-delimited>"
										},
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "redirect_uri",
											"value": "<url>"
										},
										{
											"key": "scope",
											"value": "<space-delimited>"
										},
										{
											"key": "state",
											"value": "<string>"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "code_challenge",
											"value": "<string>"
										},
										{
											"key": "code_challenge_method",
											"value": "<string>"
										},
										{
											"key": "launch",
											"value": "<string>"
										},
										{
											"key": "aud",
											"value": "<url>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "<string>"
						}
					]
				},
				{
					"name": "Token Endpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "If the client has an associated client secret, this header is the preferred method for performing client authentication. The contents of this header should follow the format `base64(urlEncode(client_id):urlEncode(client_secret))` as described in [Section 2.3.1 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-2.3.1). If the `Authorization` header is provided, the `client_id` and `client_secret` body parameters should be omitted.",
								"key": "Authorization",
								"value": "<string>"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "code",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "redirect_uri",
									"value": "<url>",
									"description": "undefined"
								},
								{
									"key": "code_verifier",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "client_secret",
									"value": "<string>",
									"description": "undefined"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/auth/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"token"
							]
						},
						"description": "This endpoint allows clients to retrieve access tokens for use in authenticated requests to Commure APIs.\n\nThe following grant types are supported:\n* Authorization Code: used for exchanging a single-use authorization `code` sent to a client's `redirect_uri` for an access token and optional refresh token.\n* Client Credentials: used by clients with an associated client secret for which the Client Credentials grant is enabled within the specific Commure Platform environment to exchange their client credentials for an access token and optional refresh token. This grant should only be used when making Commure API requests that cannot reasonably be associated with an individual user. Otherwise, the Authorization Code grant should be used.\n* Refresh Token: used for exchanging a refresh token for a new access token and optional refresh token."
					},
					"response": [
						{
							"name": "Token Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"description": "If the client has an associated client secret, this header is the preferred method for performing client authentication. The contents of this header should follow the format `base64(urlEncode(client_id):urlEncode(client_secret))` as described in [Section 2.3.1 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-2.3.1). If the `Authorization` header is provided, the `client_id` and `client_secret` body parameters should be omitted.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "<url>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code_verifier",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"<string>\",\n \"token_type\": \"<string>\",\n \"id_token\": \"<string>\",\n \"expires_in\": \"<long>\",\n \"refresh_token\": \"<string>\",\n \"scope\": \"<space-delimited>\",\n \"patient\": \"<string>\",\n \"encounter\": \"<string>\",\n \"location\": \"<string>\",\n \"intent\": \"<string>\",\n \"need_patient_banner\": \"<boolean>\",\n \"smart_style_url\": \"<url>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"description": "If the client has an associated client secret, this header is the preferred method for performing client authentication. The contents of this header should follow the format `base64(urlEncode(client_id):urlEncode(client_secret))` as described in [Section 2.3.1 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-2.3.1). If the `Authorization` header is provided, the `client_id` and `client_secret` body parameters should be omitted.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "<url>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code_verifier",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"<string>\",\n \"error_description\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"description": "If the client has an associated client secret, this header is the preferred method for performing client authentication. The contents of this header should follow the format `base64(urlEncode(client_id):urlEncode(client_secret))` as described in [Section 2.3.1 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-2.3.1). If the `Authorization` header is provided, the `client_id` and `client_secret` body parameters should be omitted.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "<url>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code_verifier",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"<string>\",\n \"error_description\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Public Keys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/jwks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"jwks"
							]
						},
						"description": "This endpoint returns a [JSON Web Key Set (JWKS)](https://tools.ietf.org/html/rfc7517) that clients can use to verify OpenID Connect ID tokens issued by the Commure Authentication API."
					},
					"response": [
						{
							"name": "JSON Web Key Set",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/jwks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"jwks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"keys\": [\n  {\n   \"kid\": \"<string>\",\n   \"kty\": \"<string>\",\n   \"e\": \"<base64urlencoded>\",\n   \"n\": \"<base64urlencoded>\",\n   \"use\": \"<string>\"\n  },\n  {\n   \"kid\": \"<string>\",\n   \"kty\": \"<string>\",\n   \"e\": \"<base64urlencoded>\",\n   \"n\": \"<base64urlencoded>\",\n   \"use\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "OpenID Connect Provider Metadata",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/.well-known/openid-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								".well-known",
								"openid-configuration"
							]
						},
						"description": "[OpenID Connect Discovery metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig) describing provider configuration."
					},
					"response": [
						{
							"name": "OpenID Connect Provider Metadata",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/.well-known/openid-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										".well-known",
										"openid-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"issuer\": \"<url>\",\n \"authorization_endpoint\": \"<url>\",\n \"token_endpoint\": \"<url>\",\n \"userinfo_endpoint\": \"<url>\",\n \"jwks_uri\": \"<url>\",\n \"end_session_endpoint\": \"<url>\",\n \"scopes_supported\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"response_types_supported\": [\n  \"<space-delimited>\",\n  \"<space-delimited>\"\n ],\n \"subject_types_supported\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id_token_signing_alg_values_supported\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"token_endpoint_auth_methods_supported\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"claims_supported\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "UserInfo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/userinfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"userinfo"
							]
						},
						"description": "This endpoint returns information about the authenticated user in the form of [OpenID Connect claims](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo). The returned claims depend on the `scope` values associated with the access token as well as the information provided by the single sign-on (SSO) provider and electronic health record (EHR). Even when the relevant scope has been requested, clients should expect that any claim except `aud` (audience client ID) and `sub` (subject ID) may be omitted from the response."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/userinfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"userinfo"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "UserInfo Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/userinfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"userinfo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"aud\": \"<string>\",\n \"sub\": \"<string>\",\n \"name\": \"<string>\",\n \"given_name\": \"<string>\",\n \"middle_name\": \"<string>\",\n \"family_name\": \"<string>\",\n \"nickname\": \"<string>\",\n \"preferred_username\": \"<string>\",\n \"profile\": \"<url>\",\n \"picture\": \"<url>\",\n \"website\": \"<url>\",\n \"email\": \"<string>\",\n \"email_verified\": \"<boolean>\",\n \"gender\": \"<string>\",\n \"birthday\": \"<date>\",\n \"zoneinfo\": \"<zoneinfo>\",\n \"locale\": \"<string>\",\n \"phone_number\": \"<string>\",\n \"phone_number_verified\": \"<boolean>\",\n \"address\": {\n  \"formatted\": \"<string>\",\n  \"street_address\": \"<string>\",\n  \"locality\": \"<string>\",\n  \"region\": \"<string>\",\n  \"postal_code\": \"<string>\",\n  \"country\": \"<string>\"\n },\n \"updated_at\": \"<long>\",\n \"fhirUser\": \"<url>\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "This endpoint logs out the authenticated user."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "<empty>"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "Sec-q0lvrLELhvAy1woH3MX1t2UVLgA-ceS",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://bend.local.commure.com:8000"
		}
	]
}